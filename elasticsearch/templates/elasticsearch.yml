apiVersion: elasticsearch.k8s.elastic.co/v1
kind: Elasticsearch
metadata:
  name: {{ template "elasticsearch.uname" . }}
spec:
  version: {{ .Values.version }}
  nodeSets:
  {{- if .Values.dedicatedMaster.enabled }}
  - name: {{ template "elasticsearch.uname" . }}-master
    count: {{ .Values.masterReplicas }}
    config:
      node.roles: ["master"]
    podTemplate:
      spec:
      {{- if .Values.sysctlInitContainer.enabled }}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
       {{- end }}
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: {{ .Values.masterMemory.requests }}
              limits:
                memory: {{ .Values.masterMemory.limits }}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data  # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.masterStorage.size }}
        storageClassName: {{ .Values.masterStorage.classname }}
  {{- end }}
  ### If you don't want to have hot,cold,frozen dedicated node, you should enabled `dedicatedData` which will create a node with all data roles enabled
  {{- if .Values.dedicatedData.enabled }}
  - name: {{ template "elasticsearch.uname" . }}-master
    count: {{ .Values.DataReplicas }}
    config:
      node.roles: ["data"]
    podTemplate:
      spec:
      {{- if .Values.sysctlInitContainer.enabled }}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
       {{- end }}
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: {{ .Values.DataMemory.requests }}
              limits:
                memory: {{ .Values.DataMemory.limits }}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data  # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.DataStorage.size }}
        storageClassName: {{ .Values.DataStorage.classname }}
  {{- end }}
  {{- if .Values.dedicatedDataHot.enabled }}
  - name: {{ template "elasticsearch.uname" . }}-hot
    count: {{ .Values.dataHotReplicas }}
    config:
      node.roles: ["data_hot", "data_content"]
    podTemplate:
      spec:
      {{- if .Values.sysctlInitContainer.enabled }}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
       {{- end }}
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: {{ .Values.dataHotMemory.requests }}
              limits:
                memory: {{ .Values.dataHotMemory.limits }}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data  # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.dataHotStorage.size }}
        storageClassName: {{ .Values.dataHotStorage.classname }}
  {{- end }}
  {{- if .Values.dedicatedDataWarm.enabled }}
  - name: {{ template "elasticsearch.uname" . }}-warm
    count: {{ .Values.dataWarmReplicas }}
    config:
      node.roles: ["data_warm"]
    podTemplate:
      spec:
      {{- if .Values.sysctlInitContainer.enabled }}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
       {{- end }}
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: {{ .Values.dataWarmMemory.requests }}
              limits:
                memory: {{ .Values.dataWarmMemory.limits }}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data  # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.dataWarmStorage.size }}
        storageClassName: {{ .Values.dataWarmStorage.classname }}
  {{- end }}
  {{- if .Values.dedicatedDataCold.enabled }}
  - name: {{ template "elasticsearch.uname" . }}-cold
    count: {{ .Values.dataColdReplicas }}
    config:
      node.roles: ["data_cold"]
    podTemplate:
      spec:
      {{- if .Values.sysctlInitContainer.enabled }}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
       {{- end }}
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: {{ .Values.dataColdMemory.requests }}
              limits:
                memory: {{ .Values.dataColdMemory.limits }}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data  # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.dataColdStorage.size }}
        storageClassName: {{ .Values.dataColdStorage.classname }}
  {{- end }}
  {{- if .Values.dedicatedDataFrozen.enabled }}
  - name: {{ template "elasticsearch.uname" . }}-frozen
    count: {{ .Values.dataFrozenReplicas }}
    config:
      node.roles: ["data_frozen"]
    podTemplate:
      spec:
      {{- if .Values.sysctlInitContainer.enabled }}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
       {{- end }}
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: {{ .Values.dataFrozenMemory.requests }}
              limits:
                memory: {{ .Values.dataFrozenMemory.limits }}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data  # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.dataFrozenStorage.size }}
        storageClassName: {{ .Values.dataFrozenStorage.classname }}
  {{- end }}
  {{- if .Values.dedicatedIngest.enabled }}
  - name: {{ template "elasticsearch.uname" . }}-ingest
    count: {{ .Values.IngestReplicas }}
    config:
      node.roles: ["ingest"]
    podTemplate:
      spec:
      {{- if .Values.sysctlInitContainer.enabled }}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
       {{- end }}
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: {{ .Values.IngestMemory.requests }}
              limits:
                memory: {{ .Values.IngestMemory.limits }}
    volumeClaimTemplates:
    - metadata:
        name: elasticsearch-data  # Do not change this name unless you set up a volume mount for the data path.
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: {{ .Values.IngestStorage.size }}
        storageClassName: {{ .Values.IngestStorage.classname }}
  {{- end }}
  {{- if and (eq .Values.dedicatedDataHot.enabled false) (eq .Values.dedicatedMaster.enabled false) (eq .Values.dedicatedDataWarm.enabled false) (eq .Values.dedicatedDataCold.enabled false) (eq .Values.dedicatedDataFrozen.enabled false) (eq .Values.dedicatedIngest.enabled false) (eq .Values.dedicatedData.enabled false) }}
  - name: {{ template "elasticsearch.uname" . }}
    count: {{ .Values.replicas }}
    podTemplate:
      spec:
      {{- if .Values.sysctlInitContainer.enabled }}
        initContainers:
        - name: sysctl
          securityContext:
            privileged: true
          command: ['sh', '-c', 'sysctl -w vm.max_map_count=262144']
       {{- end }}
        containers:
          - name: elasticsearch
            resources:
              requests:
                memory: {{ .Values.memory.requests }}
              limits:
                memory: {{ .Values.memory.limits }}
    volumeClaimTemplates:
        - metadata:
            name: elasticsearch-data
          spec:
            accessModes:
            - ReadWriteOnce
            resources:
              requests:
                storage: {{ .Values.storage.size }}
            storageClassName: {{ .Values.storage.classname }}
  {{- end }}
